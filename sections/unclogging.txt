Sometimes restricting privileges on lab machines isn't enough to prevent students from clogging the machines. If not locked down sufficiently, students can potentially cause headache to system administrators. Often, the students are not even malicious. They could simply be doing assignments that have the potential to overload the lab machines.

For example, in an operating systems course, students must learn how to properly create, fork, kill, and end processes. As with any programming, practice is needed to properly learn a new programming technique and many mistakes will be made along the way with each program run. With operating systems concepts, many leftovers will remain after each program run. Forking of processes will leave behind orphaned children if the program doesn't exit cleanly. In addition, if a student's loop runs away, the potential for overloading the system with forked processes exists. 

To prevent this, steps need to be taken to limit what a student can do. For example, a student can run through a finite set of process PIDs very quickly with a loop. If the system does not have a limit for a single user to have, the user can make the system run out of PIDs. By default, some Linux distributions set the kernel limit for a single user to 1024. However, on other distributions and other types of Unix, this limit is not necessarily in place or is too high. Thus, it is important to check this and set it accordingly. It may be a good idea to drop the process count to below a hundred if the student doesn't require a window manager (which could also be useful for forcing students to learn good command line habits). 

In addition to PIDs, students can still clog the machine by using too much CPU, memory, or disk space. CPU and memory can both be limited by editing kernel parameters by user (by default, they are unlimited). Disk space can be limited by setting a quota on home directories. However, users may still be able to write to temp directories and fill those up, so it is also useful to mount those directories from separate partitions of limited size. Temp directories may still be important for operating system performance, so a cronjob to delete excess temp files may be necessary. In the case of CECS labs, each machine can be reimaged within 10-15 minutes, so it may be simpler from an administration perspective to just let the students use the full resources of lab machines (minus administrative privileges) to use in programming. 

For many of these issues, the answer is simple: schedule a reboot every night. This will clear all orphaned processes, interrupt any processes that could be using resources and reset the environment.  

-Too many orphaned processes
-reboot



-too many sockets or ports used for networks. (optional)
